"""
Arko Sharma
111601002

"""



Problem 1
    
    In this problem, an environment implementing the " n-squared minus 1 " puzzle has
    been created.The cells are numbered from 1 to n-squared, with the cell having n-square representing the empty block. 
 
    Firstly, a random grid has been created of the specified dimension using numpy's random permutation
    function.
    
    The environment implements the actions that an agent can do - basically move the empty square 
    up,left,right or down. The required changes are done to the board and the location of the empty square
    is updated.

    The environment also provides an interface to check the parity of the current configuration of the board.
    Parity is defined as the sum of Manhattan distance of the empty block from the lower right corner 
    and the total number of inversions modulo of 2. The number of inversions modulo 2 has been counted using brute force,
    although it can be done in linear time also.
 

  

Problem 2

    This environment is a grid containing randomly selected start and goal cells.
    There are certain blockages ( sub-grids containing 1) which are generated randomly and
    cannot be traversed.For generating the blockages, 2  centres have been randomly generated  
    along with the half-grid_length. Then, subgrids around the centre has been blocked.


    It is ensured that there exists at least one path between start and goal cells.
    For doing this, we traverse using BFS starting from the start state until we reach the goal.
    The blockages from this path are removed, ie cell values reset to 0 and the path is returned.
